name: Build Packages

on:
  workflow_call:
    inputs:
      package_version:
        type: string
        required: true

  pull_request:

  push:
    branches:
      - main

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit).
  group: ${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_linux_packages:
    name: Linux Packages
    runs-on: nodai-ubuntu-builder-large
    strategy:
      fail-fast: false
    env:
      CACHE_DIR: ${{ github.workspace }}/.shark-container-cache
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: "Setting up Python"
        uses: actions/setup-python@75f3110429a8c05be0e1bf360334e4cced2b63fa # v2.3.3
        with:
          python-version: "3.11"

      - name: Sync source deps
        run: |
          # Kick off a docker image fetch concurrently with the dependency checkout.
          # It is fine of the docker pull fails: it will fail for real later.
          bash build_tools/ci/build_linux_packages.sh pull_docker_image &
          python ./sync_deps.py --depth 1 --submodules-depth 1
          echo "Waiting for docker pull and deps checkout"
          wait

      ##########################################################################
      # Write version_info.json
      # Various tools will read this in order to embed release information.
      ##########################################################################
      - name: Write version info (release)
        shell: bash
        run: |
          cat << EOF > version_info.json
          {
            "package-suffix": "",
            "package-version": "${{ inputs.package_version }}",
            "iree-revision": "$(cd ../iree && git rev-parse HEAD)",
            "torch-mlir-revision": "$(cd ../torch-mlir && git rev-parse HEAD)",
            "turbine-revision": "$(git rev-parse HEAD)"
          }
          EOF
          realpath version_info.json
          cat version_info.json

          # IREE like to see one in its tree too.
          cp version_info.json ../iree
      - name: Enable cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: shark-linux-packaging-v2-${{ github.sha }}
          restore-keys: |
            shark-linux-packaging-v2-

      - name: Build and Test
        run: |
          export cache_dir="${{ env.CACHE_DIR }}"
          export output_dir="${{ github.workspace }}/wheelhouse"
          # If just iterating locally, uncomment this to build a cheap wheel.
          # export packages="shark-turbine"
          bash build_tools/ci/build_linux_packages.sh
          # Some things put stuff in cache with weird, root read-only
          # permissions. Take them back.
          sudo chown -R "$(whoami)" "${cache_dir}"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-wheels
          path: |
            ${{ github.workspace }}/wheelhouse/shark*.whl
            ${{ github.workspace }}/wheelhouse/iree*.whl
          if-no-files-found: error